<Window x:Class="nk_Image_Converter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:nk_Image_Converter" 
        xmlns:DynamicControls="clr-namespace:nk_Image_Converter.DynamicControls"
        Background="#d4dce6"
        WindowStyle="None" BorderBrush="CadetBlue" 
        SnapsToDevicePixels="True"  ResizeMode="CanMinimize" 
        Activated="Window_Activated" Loaded="Window_Loaded"
        Title="MainWindow" Height="500" Width="1000" Icon="Resources/nk_logo_2.ico">
    <Window.Effect>
        <DropShadowEffect Opacity="0.4"/>
    </Window.Effect>
    <Window.Resources>


        <!--
            Drop Down Style
        -->

        <ControlTemplate x:Key="ComboBoxToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#d4dce6" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#d4dce6" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#d4dce6" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#d4dce6" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="#d4dce6" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="0"
            BorderThickness="0">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="#d4dce6"
                        Offset="0" />
                            <GradientStop Color="#d4dce6"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#d4dce6" />
                                    <GradientStop Color="#d4dce6"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="0,0,0,0"
            Margin="0" >
                    <Border.Background>
                        <SolidColorBrush Color="#d4dce6"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow" Grid.Column="1" Width="20" Height="25" Stroke="CadetBlue" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M4,12 L10,16 L16,12"></Path>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox"
                 TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost"
          Focusable="False"
          Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}"
       TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                        Template="{StaticResource ComboBoxToggleButton}"
                        Grid.Column="2"
                        Focusable="false"
                        ClickMode="Press"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
              RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,0"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Left">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox"
                   Style="{x:Null}"
                   Template="{StaticResource ComboBoxTextBox}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Bottom"
                   Margin="0,0,0,0"
                   Focusable="True"
                   Background="Transparent"
                   Visibility="Hidden"
                   IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                      
                  SnapsToDevicePixels="True"
                  MinWidth="{TemplateBinding ActualWidth}"
                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderBrush="CadetBlue"
                      BorderThickness="1">
                                        <Border.Background>
                                            <SolidColorBrush Color="CadetBlue" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="0,1,0,0"
                            SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems"
                   Value="false">
                                <Setter TargetName="DropDownBorder"
                    Property="MinHeight"
                    Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                   Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                   Property="AllowsTransparency"
                   Value="true">
                                <Setter TargetName="DropDownBorder"
                    Property="CornerRadius"
                    Value="0" />
                                <Setter TargetName="DropDownBorder"
                    Property="Margin"
                    Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true"
                Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarDownButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
        					x:Name="Border"
        					Margin="0" 
        					CornerRadius="0" 
        					Background="#afcecf"
                           
        					BorderBrush="#afcecf"
        					BorderThickness="0">
                            <Path
        						HorizontalAlignment="Center"
        						VerticalAlignment="Center"
        						Fill="Transparent"
        						Stroke="CadetBlue"
        						StrokeThickness="1"
                                
        						Data="M0,5 L5,9 L10,5"
                                
             />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#9fc4c6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#8fbbbc" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#afcecf"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
        					x:Name="Border"
        					Margin="0" 
        					CornerRadius="0" 
        					Background="#afcecf"
                           
        					BorderBrush="#afcecf"
        					BorderThickness="0">
                            <Path
        						HorizontalAlignment="Center"
        						VerticalAlignment="Center"
        						Fill="Transparent"
        						Stroke="CadetBlue"
        						StrokeThickness="1"
                                
        						Data="M0,5 L5,1 L10,5"
                                
             />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#9fc4c6"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#8fbbbc" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#afcecf"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border 
        					CornerRadius="5" 
        					Background="#afcecf"
        					BorderBrush="CadetBlue"
        					BorderThickness="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#bec6cf"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid HorizontalAlignment="Right" Width="10" Background="CadetBlue">

                <Grid.RowDefinitions>
                    <!--<RowDefinition MaxHeight="18"/>-->
                    <RowDefinition Height="1*"/>
                    <!--<RowDefinition MaxHeight="18"/>-->
                </Grid.RowDefinitions>
                <Border
        			Grid.RowSpan="1"
        			CornerRadius="0" 
        			Background="CadetBlue" 
                    BorderThickness="0"/>

                <Track 
                    
        			x:Name="PART_Track"
        			Grid.Row="1"
        			IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
        					Style="{StaticResource ScrollBarPageButton}"
        					Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
        					Style="{StaticResource ScrollBarThumb}" 
        					Margin="-2,0,5,0"  
        					Background="CadetBlue"
                            BorderThickness="1"
        					BorderBrush="CadetBlue" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
        					Style="{StaticResource ScrollBarPageButton}"
        					Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>

            </Grid>
        </ControlTemplate>



        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />

                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Border BorderThickness="3,0,3,3" BorderBrush="CadetBlue">
        <Grid Background="#D4DCE6" x:Name="MainGrid">
            <Grid x:Name="HeaderGrid" Width="1000" Height="30" VerticalAlignment="Top" Background="CadetBlue" Margin="0,0,0,0" MouseDown="HeaderGrid_MouseDown">
                <Label x:Name="HeaderLabel" HorizontalAlignment="Center" Content="nk Image Converter" FontSize="17.5" Margin="417,-3,417,0"/>
                <Grid x:Name="ButtonContainerGrid" Width="100" HorizontalAlignment="Right" Margin="0,0,10,0">
                    <Button x:Name="MinimizeButton" BorderThickness="0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" SnapsToDevicePixels="True" Margin="8,0,0,0" Click="MinimizeButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="CadetBlue"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#6fa7a9"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Image Height="23" Width="23" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" Source="Resources/minimize.png"/>
                    </Button>
                    <Button x:Name="CloseButton" BorderThickness="0" Height="30" BorderBrush="{x:Null}" Foreground="{x:Null}" SnapsToDevicePixels="True" Margin="0,0,-8,0" Click="CloseButton_Click" HorizontalAlignment="Right" Width="50">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FFC75050"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#b93838"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Image Height="20" Width="20" HorizontalAlignment="Left" VerticalAlignment="Center" SnapsToDevicePixels="True" Source="Resources/cross.png"/>
                    </Button>
                </Grid>
            </Grid>
            <Grid Background="Transparent" HorizontalAlignment="Center" Height="35" Width="900" Margin="44,35,46,425">
                <Grid Background="Transparent" Margin="0,0,790,0">
                    <Grid Width="45" HorizontalAlignment="Left">
                        <RadioButton x:Name="FileRadioButton" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="3" BorderBrush="CadetBlue" Foreground="CadetBlue" Background="WhiteSmoke" Checked="FileRadioButton_Checked"/>
                        <Label VerticalAlignment="Center" Content="File" HorizontalAlignment="Right"/>
                    </Grid>
                    <Grid Width="65" HorizontalAlignment="Right">
                        <RadioButton x:Name="FolderRadioButton" VerticalAlignment="Center" HorizontalAlignment="Left" BorderBrush="CadetBlue" BorderThickness="3" Foreground="CadetBlue" Background="WhiteSmoke" Checked="FolderRadioButton_Checked"/>
                        <Label Content="Folder" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,4,5,5"/>
                    </Grid>
                </Grid>
                <Grid Background="Transparent" HorizontalAlignment="Right" Width="790">
                    <TextBox x:Name="PathTextBox" Height="20" Width="650" IsReadOnly="True" BorderThickness="1" Background="WhiteSmoke" BorderBrush="CadetBlue"/>
                    <Button x:Name="AddButton" HorizontalAlignment="Right" Width="50" Height="25" Margin="0,0,12,0" BorderThickness="0" Click="AddButton_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="CadetBlue"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>

                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#6fa7a9"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Image Source="Resources/folder.png" SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Button>
                </Grid>
            </Grid>
            <Canvas x:Name="TopLineCanvas" HorizontalAlignment="Left" Height="4" Margin="0,74,0,0" VerticalAlignment="Top" Width="1000">
                <Line x:Name="TopLine" Stroke="CadetBlue" StrokeThickness="1" Width="960" X1="960" Y2="2" Y1="2" Margin="20,0" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased"/>
            </Canvas>
            <Canvas HorizontalAlignment="Left" Height="350" Margin="213,83,0,0" VerticalAlignment="Top" Width="4">
                <Line x:Name="VertiLine" Stroke="CadetBlue" StrokeThickness="1" Height="350" X1="2" X2="2" Y1="350" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased"/>
            </Canvas>
            <Canvas x:Name="BottomCanvas"  Height="4" Margin="0,441,0,55" Width="1000">
                <Line x:Name="BottomLine" Stroke="CadetBlue" StrokeThickness="1" Width="960" X1="960" Y2="2" Y1="2" Margin="20,0" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased"/>
            </Canvas>
            <Grid Background="CadetBlue" HorizontalAlignment="Left" Height="339" Margin="16,89,0,0" VerticalAlignment="Top" Width="184">
                <Grid.Effect>
                    <DropShadowEffect Opacity="0.3"/>
                </Grid.Effect>
                <ComboBox x:Name="ConvertResizeSelect" Width="130" Height="25" VerticalAlignment="Top" Margin="27" SelectedIndex="0" SelectionChanged="ConvertResizeSelect_SelectionChanged">
                    <ComboBox.Effect>
                        <DropShadowEffect Opacity="0.2"/>
                    </ComboBox.Effect>
                    <ComboBoxItem Content=" Convert">
                        <ComboBoxItem.Style>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Background" Value="#D4DCE6"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#bec6cf"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBoxItem.Style>
                    </ComboBoxItem>
                    <ComboBoxItem Content=" Resize">
                        <ComboBoxItem.Style>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="Background" Value="#D4DCE6"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#bec6cf"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBoxItem.Style>
                    </ComboBoxItem>
                </ComboBox>
                <Grid x:Name="ImageTypeSelectionGrid" Height="250" VerticalAlignment="Bottom" Visibility="Visible">
                    <StackPanel>
                        <RadioButton x:Name="RBPng" HorizontalAlignment="Center" BorderThickness="2" Content="PNG" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBJpg" HorizontalAlignment="Center" BorderThickness="2" Content="JPG" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBGif" HorizontalAlignment="Center" BorderThickness="2" Content="GIF" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBBmp" HorizontalAlignment="Center" BorderThickness="2" Content="BMP" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBIco" HorizontalAlignment="Center" BorderThickness="2" Content="ICO" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBTif" HorizontalAlignment="Center" BorderThickness="2" Content="TIF/TIFF" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="66" Margin="66,5,52,5"/>
                        <RadioButton x:Name="RBWmf" HorizontalAlignment="Center" BorderThickness="2" Content="WMF" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                        <RadioButton x:Name="RBEmf" HorizontalAlignment="Center" BorderThickness="2" Content="EMF" BorderBrush="#4c7e80" VerticalAlignment="Center" Width="52" Margin="5"/>
                    </StackPanel>
                </Grid>
                <Grid x:Name="ResizeImageGrid" Height="250" VerticalAlignment="Bottom" Visibility="Hidden">
                    <Grid Height="76" >
                        <Grid Height="38" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Width" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Grid Grid.Column="1" VerticalAlignment="Center">
                                <TextBox x:Name="NumericUpDownWidth" HorizontalAlignment="Left" Width="50" Height="20" BorderThickness="0" Background="#D4DCE6" LostFocus="NumericUpDownWidth_LostFocus" TextChanged="NumericUpDownWidth_TextChanged" />
                                <Grid Width="12" Height="20" HorizontalAlignment="Right">
                                    <Button x:Name="NumericUpButton" BorderThickness="0" Margin="0,0,0,10" Click="NumericUpButtonW_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="#D4DCE6"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#bec6cf"/>
                                                    </Trigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Path Stroke="CadetBlue" Fill="Transparent" Width="12" Height="10" Data="M2,6 L6,4 L10,6.2"/>
                                    </Button>
                                    <Button x:Name="NumericDownButtonW" Height="10" BorderThickness="0" VerticalAlignment="Bottom" Click="NumericDownButtonW_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="#D4DCE6"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#bec6cf"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Path Stroke="CadetBlue" Fill="Transparent" Width="12" Height="10" Data="M2,4 L6,6 L10,3.8"/>
                                    </Button>
                                </Grid>
                            </Grid>
                            <Label Grid.Column="2" Content="px" VerticalAlignment="Center"/>
                        </Grid>
                        <Grid Background="Transparent" Height="38" VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Label Grid.Column="0" Content="Height" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <Grid Grid.Column="1" VerticalAlignment="Center">
                                <TextBox x:Name="NumericUpDownHeight" HorizontalAlignment="Left" Width="50" Height="20" BorderThickness="0" Background="#D4DCE6" TextChanged="NumericUpDownHeight_TextChanged" LostFocus="NumericUpDownHeight_LostFocus" />
                                <Grid Width="12" Height="20" HorizontalAlignment="Right">
                                    <Button x:Name="NumericUpButtonH" BorderThickness="0" Margin="0,0,0,10" Click="NumericUpButtonH_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="#D4DCE6"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#bec6cf"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Path Stroke="CadetBlue" Fill="Transparent" Width="12" Height="10" Data="M2,6 L6,4 L10,6.2"/>
                                    </Button>
                                    <Button x:Name="NumericDownButtonH" Height="10" BorderThickness="0" VerticalAlignment="Bottom" Click="NumericDownButtonH_Click">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Background" Value="#D4DCE6"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Background="{TemplateBinding Background}">
                                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#bec6cf"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <Path Stroke="CadetBlue" Fill="Transparent" Width="12" Height="10" Data="M2,4 L6,6 L10,3.8"/>
                                    </Button>
                                </Grid>
                            </Grid>
                            <Label Grid.Column="2" Content="px" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            <ScrollViewer x:Name="ImageContainerSV" Width="740" Height="340" HorizontalAlignment="Left" Margin="231,89,0,0" VerticalAlignment="Top" Background="CadetBlue" ScrollViewer.VerticalScrollBarVisibility="Visible" MouseEnter="ImageContainerSV_MouseEnter" MouseLeave="ImageContainerSV_MouseLeave">
                <ScrollViewer.Effect>
                    <DropShadowEffect Opacity="0.3"/>
                </ScrollViewer.Effect>
            </ScrollViewer>

            <Button x:Name="ConvertButton" Content="Convert" HorizontalAlignment="Left" Margin="16,456,0,0" VerticalAlignment="Top" Width="184" BorderThickness="0" Height="28" Click="ConvertButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="CadetBlue"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6fa7a9"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#558e90"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBox x:Name="SavePathTextBox" HorizontalAlignment="Left" Height="23" Margin="294,459,0,0" TextWrapping="Wrap" IsReadOnly="True" BorderThickness="1" BorderBrush="CadetBlue" VerticalAlignment="Top" Width="574"/>
            <Label Content="Save to" HorizontalAlignment="Left" Margin="240,457,0,0" VerticalAlignment="Top"/>
            <Button x:Name="SaveButton" HorizontalAlignment="Left" Margin="885,458,0,0" VerticalAlignment="Top" BorderThickness="0" Width="50" Height="25" Click="SaveButton_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="CadetBlue"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>

                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#6fa7a9"/>
                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Source="Resources/save.png" Height="20" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
            </Button>
            <Grid x:Name="AllSelectionGrid" Background="#d4dce6" HorizontalAlignment="Left" Height="18" Margin="495,78,0,0" VerticalAlignment="Top" Width="175" MouseEnter="AllSelectionGrid_MouseEnter" MouseLeave="AllSelectionGrid_MouseLeave">
                <Border BorderBrush="CadetBlue" BorderThickness="1"/>
                <RadioButton BorderThickness="2" BorderBrush="CadetBlue" x:Name="SelectAllCheckBox" IsChecked="True" Content="Select All" VerticalAlignment="Center" Margin="5,0" Checked="SelectAllCheckBox_Checked"/>
                <RadioButton BorderThickness="2" BorderBrush="CadetBlue" x:Name="UnSelectAllCheckBox" Content="Unselect All" Margin="80,0,10,0" VerticalAlignment="Center" Checked="UnSelectAllCheckBox_Checked"/>
            </Grid>
        </Grid>
    </Border>
</Window>
